{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/inputform/inputform.component.css","webpack:///./src/app/components/inputform/inputform.component.html","webpack:///./src/app/components/inputform/inputform.component.ts","webpack:///./src/app/components/sociallogin/sociallogin.component.css","webpack:///./src/app/components/sociallogin/sociallogin.component.html","webpack:///./src/app/components/sociallogin/sociallogin.component.ts","webpack:///./src/app/config-service.service.ts","webpack:///./src/app/store/State.ts","webpack:///./src/app/store/actions.ts","webpack:///./src/app/store/errohandling.ts","webpack:///./src/config/config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<header>\\n  <div class=\\\"container\\\">\\n    <div id=\\\"branding\\\">\\n      <h1><span class=\\\"highlight\\\">Just</span> Say Website</h1>\\n    </div>\\n    <nav>\\n      <ul>\\n        <li class=\\\"current\\\"><a href=\\\"index.html\\\">Home</a></li>\\n        <li><a href=\\\"index.html\\\">About</a></li>\\n        <li><a href=\\\"index.html\\\">Services</a></li>\\n      </ul>\\n    </nav>\\n  </div>\\n\\n</header>\\n\\n\\n\\n<section id=\\\"showcase\\\">\\n  <div class=\\\"container\\\">\\n    <h1>Describe a Website - Have It Done</h1>\\n    <p>You just fill the form below with your website title, description, twitter.  Click the generate button and you have your website done! ;) We use <a href=\\\"https://jekyllrb.com/\\\" style=\\\"color:bisque\\\" target=\\\"_blank\\\">Jekyll</a> For web site generation, <a href=\\\"https://www.netlify.com/\\\" style=\\\"color:bisque\\\" target=\\\"_blank\\\">Netlify</a> for web site hosting, <a href=\\\"https://getbootstrap.com/\\\" style=\\\"color:bisque\\\" target=\\\"_blank\\\">Bootstrap</a> for theme management, <a href=\\\"https://github.com/\\\" style=\\\"color:bisque\\\" target=\\\"_blank\\\">Github</a> for web site revision history.  Click Generate WebSite button below and enjoy your free web site!</p>\\n    <!--<video autoplay muted loop id=\\\"myVideo\\\">-->\\n      <!--<source src=\\\"assets/rain.mp4\\\" type=\\\"video/mp4\\\" id=\\\"myVideo\\\">-->\\n    <!--</video>-->\\n  </div>\\n</section>\\n\\n<!--<section id=\\\"newsletter\\\">-->\\n  <!--<div class=\\\"container\\\">-->\\n    <!--<h1>Subscribe To Our Newsletter</h1>-->\\n    <!--<form>-->\\n      <!--<input type=\\\"email\\\" placeholder=\\\"Enter Email...\\\">-->\\n      <!--<button type=\\\"submit\\\" class=\\\"button_1\\\">Subscribe</button>-->\\n    <!--</form>-->\\n  <!--</div>-->\\n<!--</section>-->\\n\\n<section id=\\\"boxes\\\">\\n  <div class=\\\"container\\\">\\n      <app-inputform></app-inputform>\\n  </div>\\n</section>\\n\\n<section id=\\\"sociallogin\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"box\\\">\\n      <app-sociallogin></app-sociallogin>\\n    </div>\\n  </div>\\n</section>\\n\\n\\n<!--<section id=\\\"boxes\\\">-->\\n  <!--<div class=\\\"container\\\">-->\\n    <!--<div class=\\\"box\\\">-->\\n      <!--<img src=\\\"assets/img/logo_html.png\\\">-->\\n      <!--<h3>HTML5 Markup</h3>-->\\n      <!--<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mi augue, viverra sit amet ultricies</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"box\\\">-->\\n      <!--<img src=\\\"assets/img/logo_css.png\\\">-->\\n      <!--<h3>CSS3 Styling</h3>-->\\n      <!--<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mi augue, viverra sit amet ultricies</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"box\\\">-->\\n      <!--<img src=\\\"assets/img/logo_brush.png\\\">-->\\n      <!--<h3>Graphic Design</h3>-->\\n      <!--<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mi augue, viverra sit amet ultricies</p>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n<!--</section>-->\\n\\n<footer>\\n  <p>JustSayWebsite Web Deisgn, Tomer Ben David, Copyright &copy; 2018</p>\\n</footer>\\n\\n\\n<!--\\n<div style=\\\"text-align:center\\\">\\n\\n\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\n<h2>Just Say What Your Website Is About Below: </h2>\\n\\n\\n\\n<ul>\\n\\n\\n\\n\\n  <li>\\n    <app-inputform></app-inputform>\\n  </li>\\n\\n  <li>\\n\\n  </li>\\n</ul>\\n\\n-->\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {ErrorHandler, NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormBuilder, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NgxsModule } from '@ngxs/store';\nimport {MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { InputformComponent } from './components/inputform/inputform.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { SocialLoginModule, AuthServiceConfig } from 'angular-6-social-login';\nimport { GoogleLoginProvider, FacebookLoginProvider } from 'angular-6-social-login';\nimport { SocialLoginComponent } from './components/sociallogin/sociallogin.component';\nimport {ConfigService} from \"./config-service.service\";\n\nimport {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\nimport {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\n\nimport {AppState, AppStateModel} from \"./store/State\";\nimport {ErrorsHandler} from \"./store/errohandling\";\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nconst config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider('150697409404-10tptpnagkv9mcogc79nk3c5m8bcenn6.apps.googleusercontent.com')\n  }\n]);\n\nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputformComponent,\n    SocialLoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatToolbarModule,\n\n    FlexLayoutModule,\n\n    FormsModule,\n    HttpClientModule,\n\n    SocialLoginModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    NgxsModule.forRoot([AppState]),\n    NgxsStoragePluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot({disabled: false}),\n    NgxsLoggerPluginModule.forRoot()\n\n  ],\n  providers: [{\n    provide: AuthServiceConfig,\n    useFactory: provideConfig,\n\n  }, ConfigService,   {\n    provide: ErrorHandler,\n    useClass: ErrorsHandler\n  }\n  ],\n\n\n  bootstrap: [AppComponent],\n\n\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.mat-unstyled-image img{\\n  max-width: 100%;\\n  width: auto;\\n  height: auto !important; /* needs to be important because md-card also sets it that way */\\n}\\n\\n\"","module.exports = \"<!--<form class=\\\"example-form\\\" (ngSubmit)=\\\"onSubmit()\\\">-->\\n    <form class=\\\"example-full-width\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"10%\\\" fxLayoutAlign=\\\"center\\\">\\n\\n        <div fxFlex=\\\"50%\\\">\\n          <h2>Describe Your WebSite</h2>\\n\\n          <mat-horizontal-stepper>\\n\\n            <mat-step>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Web Site Title\\\" (change)=\\\"onFieldsChange(title.value, subtitle.value, description.value, topButtonTitle.value, subDescription.value)\\\" #title value=\\\"{{ (app$ | async).everyBootstrapThemeConfig.match('title: &quot;(.*)&quot;')[1] }}\\\">\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Subtitle\\\" (change)=\\\"onFieldsChange(title.value, subtitle.value, description.value, topButtonTitle.value, subDescription.value)\\\" value=\\\"{{ (app$ | async).everyBootstrapThemeConfig.match('top_left_title: &quot;(.*)&quot;')[1] }}\\\" #subtitle>\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Web Site Description\\\" (change)=\\\"onFieldsChange(title.value, subtitle.value, description.value, topButtonTitle.value, subDescription.value)\\\" #description value=\\\"{{ (app$ | async).everyBootstrapThemeConfig.match('moredetails_section_description: &quot;(.*)&quot;')[1] }}\\\">\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Main Button Title\\\" (change)=\\\"onFieldsChange(title.value, subtitle.value, description.value, topButtonTitle.value, subDescription.value)\\\" #topButtonTitle value=\\\"{{ (app$ | async).everyBootstrapThemeConfig.match('top_button_page_scroll_title: &quot;(.*)&quot;')[1] }}\\\">\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Mid Page Description\\\" (change)=\\\"onFieldsChange(title.value, subtitle.value, description.value, topButtonTitle.value, subDescription.value)\\\" #subDescription value=\\\"{{ (app$ | async).everyBootstrapThemeConfig.match('multicolumn_section_first_column_description: &quot;(.*)&quot;')[1] }}\\\">\\n              </mat-form-field>\\n\\n              <div>\\n                <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n              </div>\\n            </mat-step>\\n\\n            <mat-step>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <textarea matInput rows=\\\"20\\\" placeholder=\\\"Advanced Change Anything Here\\\" value=\\\"{{ (app$ | async).everyBootstrapThemeConfig }}\\\" #themeConfig name=\\\"themeConfig\\\"></textarea>\\n              </mat-form-field>\\n\\n              <div>\\n                <button mat-button matStepperPrevious type=\\\"button\\\">Back</button>\\n                <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n              </div>\\n\\n            </mat-step>\\n\\n\\n          </mat-horizontal-stepper>\\n\\n          <div>\\n            <p>\\n              <button mat-raised-button type=\\\"submit\\\"\\n                      class=\\\"btn btn-success\\\"\\n                      (click)=\\\"genereateWebSite(themeConfig.value);openSnackBar('Cool, we are preparing your website', 'It takes about one minute!')\\\">Generate Your Website!</button>\\n            </p>\\n          </div>\\n          <div *ngIf=\\\"isInProgress\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n          </div>\\n          <div *ngIf=\\\"isFinishedUpdatingSite\\\">\\n            <p>\\n              <a href=\\\"{{ (app$ | async).webSiteUrl }}\\\" target=\\\"_blank\\\" >You Said It - Your Web Site Is Here!</a>\\n            </p>\\n          </div>\\n\\n        </div> <!-- flex column 50% -->\\n\\n        <div fxFlex=\\\"50%\\\">\\n          <h2>Choose Theme</h2>\\n          <mat-card>\\n            <img mat-card-image src=\\\"assets/img/everybootstrap-theme-preview.png\\\">\\n            <mat-card-actions>\\n              <div *ngIf=\\\"((app$ | async).everyBootstrapThemeConfig.match('justsaywebsite_theme: &quot;(.*)&quot;') == null || (app$ | async).everyBootstrapThemeConfig.match('justsaywebsite_theme: &quot;(.*)&quot;')[1] === 'jekyll-theme-03-every-boostrap'); else chooseEveryBootstrap\\\">\\n                  <button mat-button>CURRENT THEME!</button>\\n              </div>\\n              <ng-template #chooseEveryBootstrap>\\n                <button (click)=\\\"onThemeChange('jekyll-theme-03-every-boostrap')\\\" mat-button>CHOOSE ME</button>\\n              </ng-template>\\n            </mat-card-actions>\\n          </mat-card>\\n          <mat-card>\\n            <img mat-card-image src=\\\"assets/img/grayscale-theme-preview.png\\\">\\n            <mat-card-actions>\\n              <div *ngIf=\\\"((app$ | async).everyBootstrapThemeConfig.match('justsaywebsite_theme: &quot;(.*)&quot;') !== null && (app$ | async).everyBootstrapThemeConfig.match('justsaywebsite_theme: &quot;(.*)&quot;')[1] === 'justsaywebsite-theme-startbootstrap-grayscale'); else chooseGrayScale\\\">\\n                <button mat-button>CURRENT THEME!</button>\\n              </div>\\n              <ng-template #chooseGrayScale>\\n                <button (click)=\\\"onThemeChange('justsaywebsite-theme-startbootstrap-grayscale')\\\" mat-button>CHOOSE ME</button>\\n              </ng-template>\\n            </mat-card-actions>\\n          </mat-card>\\n        </div>\\n\\n\\n      </div> <!-- flex row -->\\n\\n\\n\\n\\n    </form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfigService} from \"../../config-service.service\";\nimport {AppState} from \"../../store/State\";\nimport {interval, Observable} from \"rxjs/index\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {\n  GenerateWebSiteAction,\n  InitWithDefaultsAction, ThemeChosenAction,\n  UpdateEmailAction, WebSiteFieldsUpdatedAction,\n  WebSiteGeneratedAction\n} from \"../../store/actions\";\nimport { switchMap } from 'rxjs/operators';\n\ninterface GenerateSiteResponse {\n  sitename: string;\n}\n\ninterface SiteStatusResponse {\n  status: string;\n}\n\n@Component({\n  selector: 'app-inputform',\n  templateUrl: './inputform.component.html',\n  styleUrls: ['./inputform.component.css']\n})\nexport class InputformComponent implements OnInit {\n\n  isInProgress = false;\n  isFinishedUpdatingSite = false;\n\n  @Select() app$;\n  emailFromStore: string = null;\n\n  model = new WebSiteProperties('Default Web Site Title', 'The only site description The only site description The only site ' +\n    'description The only site description The only site description The only site description The only site description The only ' +\n    'site description The only site description The only site description ', 'Top Button Title', 'Want to make this subtitle yourself?',\n    'Forget that! Who would ever want to put in all of that effort for a website? Just open up your ' +\n    'web browser and type bootstrap template ' +\n    'into your favorite search engine, like Yahoo! or Bing, and you\\'re on your way! There are hundreds of templates to choose from, but ' +\n    'go ahead and pick this same exact template from the first result on google, edit a few lines, ' +\n    'and you\\'re on your way! No one will notice! :)', 'Section 3 Default Title Internal');\n  constructor(private http: HttpClient, public snackBar: MatSnackBar, private formBuilder: FormBuilder,\n              private configService: ConfigService, private store: Store) {\n    this.store.select(state => {\n      this.emailFromStore = state.email;\n    })\n\n  }\n\n  ngOnInit() {\n    this.store.dispatch([new InitWithDefaultsAction()]);\n  }\n\n  onSubmit() {\n  }\n\n  checkStatus(sitename: string): void {\n    this.http.get<SiteStatusResponse>(`${this.configService.config.serverURL}/justsaywebsite/status/?sitename=${sitename}`).subscribe(data => {\n      console.log(`status: ${JSON.stringify(data)}`);\n\n      const that = this;\n\n      if (data.status !== 'done') {\n        console.log(`status is not done yet its: ${data.status}`);\n        setTimeout(function() { that.checkStatus(sitename); }, 5000)\n      } else {\n        this.store.dispatch([new WebSiteGeneratedAction(`https://${sitename}.netlify.com`)]);\n        this.isInProgress = false;\n        this.isFinishedUpdatingSite = true;\n        this.openSnackBar('Your website is ready', 'click above link to open it!');\n      }\n    }, error => {\n      console.log(`an error has occured: ${error.message}`);\n      this.isInProgress = false;\n    });\n  }\n\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 10000,\n    });\n  }\n\n  genereateWebSite(themeConfig: any) {\n    this.store.dispatch([new GenerateWebSiteAction(themeConfig)]);\n\n    console.log('form submitted...');\n    this.isInProgress = true;\n    console.log('model: ' + JSON.stringify(this.model));\n\n    this.store.selectSnapshot(state => {\n\n      console.log(`onSubmit state: ${themeConfig}`);\n\n      this.http.post<GenerateSiteResponse>(\n        this.configService.config.serverURL,\n        { email: state.app.email, pageData: JSON.stringify(themeConfig)}).subscribe(data => {\n\n        this.checkStatus(data.sitename);\n        // this.store.dispatch([new WebSiteGeneratedAction(data.sitename)]);\n        // this.isInProgress = false;\n        // this.isFinishedUpdatingSite = true;\n        // this.openSnackBar('Your website is ready', 'click above link to open it!');\n      }, error => {\n        console.log(`an error has occured: ${error.message}`);\n        this.isInProgress = false;\n      });\n\n    });\n\n\n  }\n\n\n\n  getTitle(): Observable<string> {\n    return this.app$.map(state => {\n        return state.everyBootstrapThemeConfig.match('title: &quot;(.*)&quot;')[1];\n      }\n    );\n  }\n\n  onFieldsChange(title: string, subtitle: string, description: string, topButtonTitle: string, subDescription: string) {\n    this.store.dispatch([new WebSiteFieldsUpdatedAction(title, subtitle, description, topButtonTitle, subDescription)]);\n  }\n\n  onThemeChange(theme: string) { this.store.dispatch([new ThemeChosenAction(theme)]); }\n\n}\n\nexport class WebSiteProperties {\n  constructor (public title: string, public description: string,\n               public topButtonScrollTitle: string, public subtitle: string,\n               public subdescription: string, public section3Title: string) {}\n}\n","module.exports = \"/* Social Buttons Style */\\n.btn-si {\\n  background-position: 1em;\\n  background-repeat: no-repeat;\\n  background-size: 2em;\\n  border-radius: 0.5em;\\n  border: none;\\n  color: white;\\n  cursor: pointer;\\n  font-size: 1em;\\n  height: 4em;\\n  line-height: 1em;\\n  padding: 0 2em 0 4em;\\n  text-decoration: none;\\n  transition: all 0.5s;\\n\\n}\\n.btn-google {\\n  background-color: #dd4b39;\\n  background-image: url(\\\"/./assets/img/google.svg\\\");\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n\\n}\\n.btn-google:hover {\\n  background-color: #e47365; }\\n.btn-google:active {\\n  background-color: #c23321; }\\n.btn-si-a {\\n  padding: 25px 15px 25px 65px !important;\\n  font-family: arial;\\n}\\n.smaller .btn-si-a {\\n  padding-left: 40px !important;\\n  font-size: 12px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin:20px\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"2%\\\" fxLayoutAlign=\\\"center\\\"> <!-- style margin add padding to social top -->\\n\\n  <div fxFlex=\\\"100%\\\">\\n\\n    <div class=\\\"jumbotron bg-transparent text-center\\\">\\n      <div *ngIf=\\\"!(app$ | async).email\\\" class=\\\"card text-center\\\">\\n        <div class=\\\"card-block\\\">\\n          <button class=\\\"btn-si btn-google\\\" (click)=\\\"socialSignIn('google')\\\">Login To Generate Your Unique Site</button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"(app$ | async).email\\\" class=\\\"card text-center\\\">\\n        <div class=\\\"card-block\\\"></div>\\n        <img class=\\\"card-img-top img-responsive photo\\\" src=\\\"{{ (app$ | async).photoURL }}\\\">\\n        <div class=\\\"card-block\\\">\\n          <h4 class=\\\"card-title\\\">{{ (app$ | async).username }}</h4>\\n          <p class=\\\"card-text\\\">{{ (app$ | async).email }}</p>\\n        </div>\\n        <div class=\\\"card-block\\\">\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"signOut()\\\">Sign out</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService, GoogleLoginProvider, SocialUser} from 'angular-6-social-login';\nimport {ConfigService} from \"../../config-service.service\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {UpdateEmailAction} from \"../../store/actions\";\n\n@Component({\n  selector: 'app-sociallogin',\n  templateUrl: './sociallogin.component.html',\n  styleUrls: ['./sociallogin.component.css']\n})\nexport class SocialLoginComponent {\n\n  user: SocialUser;\n\n  @Select() app$;\n\n  constructor(private socialAuthService: AuthService, private configService: ConfigService,\n              private store: Store) { }\n\n  public socialSignIn(socialPlatform : string) {\n    let socialPlatformProvider;\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n\n    this.socialAuthService.signIn(socialPlatformProvider).then(\n      (userData) => {\n        this.user = userData;\n        console.log(socialPlatform+\" sign in data : \" , userData);\n        this.store.dispatch([new UpdateEmailAction(userData.email, userData.name, userData.image)])\n      }\n    );\n\n  }\n\n  signOut(): void {\n    this.user = null;\n    this.socialAuthService.signOut();\n    this.store.dispatch([new UpdateEmailAction(null, null, null)])\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {CurrentConfig} from \"../config/config\";\n\n@Injectable()\nexport class ConfigService {\n\n  config = new CurrentConfig()\n\n  constructor() {\n\n    console.log(`backend is: ${this.config.serverURL}`);\n\n  }\n\n\n\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport {\n  GenerateWebSiteAction,\n  InitWithDefaultsAction, ResetWebSiteFieldsAction, ThemeChosenAction,\n  UpdateEmailAction,\n  WebSiteFieldsUpdatedAction,\n  WebSiteGeneratedAction\n} from \"./actions\";\n\nconst everyBootstrapThemeConfigDefault = `# Titles\n\ntitle: \"Your Cool WebSite Title\"\ntop_left_title: \"Your Cool Website\"\ntop_button_page_scroll_title: \"Check Us Out\"\n\n# Navigation Bar\n\nnavigation_four_icons_text: \"Four Icons\"\nnavigation_showcase_text: \"Showcase\"\nnavigation_contactus_text: \"Call Me\"\n\n# More Details Section\n\nmoredetails_section_title: \"This Is An Amazing Product\"\nmoredetails_section_description: \"Your whole website is actually one text file configuration, isn't that just wonderful, you can backup your whole web site with a simple text file, this is just genius! You can switch templates and just upload this single text file to change template, awesome!\"\nmoredetails_section_button_title: \"Google That Shit\"\n\n# Showcase Section\n\nmulticolumn_section_title: \"So Fucking Creative\"\nmulticolumn_section_first_column_title: \"This Fucking Template\"\nmulticolumn_section_first_column_description: \"Guaranteed to use the same fucking template that every other bootstrap website uses, downloaded straight from The Web\"\nmulticolumn_section_second_column_title: \"This Set of Four Icons\"\nmulticolumn_section_second_column_description: \"Look at this cool set of four icons describing different things about us! We use four, because it's the default.\"\nmulticolumn_section_third_column_title: \"Lots of effort\"\nmulticolumn_section_third_column_description: \"We even changed some of the icons! We take the extra effort to make our designs truly original.\"\nmulticolumn_section_forth_column_title: \"Made with Love\"\nmulticolumn_section_forth_column_description: \"Because nothing says hard work and talent like editing a few lines of text.\"\n\n# Social\n\nemail: holly@shit.com\ndescription: \"Your whole website is actually one text file, isn't that just wonderful, you can backup your whole web site with a simple text file, this is just genius! You can switch templates and just upload this single text file to change template, awesome!\"\nbaseurl: \"\" # the subpath of your site, e.g. /blog\nurl: \"\" # the base hostname & protocol for your site, e.g. http://example.com\ntwitter_username: jekyllrb\ngithub_username:  jekyll\n\n# Build settings\nmarkdown: kramdown\ntheme: minima\nplugins:\n  - jekyll-feed\n\njustsaywebsite_theme: \"jekyll-theme-03-every-boostrap\"\ntomersource: https://github.com/petehouston/the-only-bootstrap-page\n`;\n\n\nexport interface AppStateModel {\n  username: string;\n  email: string;\n  photoURL: string;\n  webSiteUrl: string;\n  everyBootstrapThemeConfig: string;\n}\n\n@State<AppStateModel>({\n  name: 'app',\n  defaults: {\n    username: null,\n    email: null,\n    photoURL: null,\n    webSiteUrl: null,\n    everyBootstrapThemeConfig: everyBootstrapThemeConfigDefault\n  }\n})\n\nexport class AppState {\n\n  @Selector()\n  static getUser(state: AppStateModel) {\n    return state.email;\n  }\n\n  @Action(UpdateEmailAction)\n  setEmail({getState, patchState }: StateContext<AppStateModel>, { email, username, photoURL }: UpdateEmailAction) {\n    patchState({ email: email, username: username, photoURL: photoURL });\n  }\n\n  @Action(WebSiteGeneratedAction)\n  setWebSiteUrl({getState, patchState }: StateContext<AppStateModel>, { webSiteUrl }: WebSiteGeneratedAction) {\n    patchState({ webSiteUrl: webSiteUrl });\n  }\n\n  @Action(GenerateWebSiteAction)\n  setThemeConfig({getState, patchState }: StateContext<AppStateModel>, { everyBootstrapThemeConfig }: GenerateWebSiteAction) {\n    patchState({ everyBootstrapThemeConfig: everyBootstrapThemeConfig });\n  }\n\n  @Action(ResetWebSiteFieldsAction)\n  resetWebSitefields({getState, patchState }: StateContext<AppStateModel>, { }: GenerateWebSiteAction) {\n    patchState({ everyBootstrapThemeConfig: everyBootstrapThemeConfigDefault });\n  }\n\n  @Action(WebSiteFieldsUpdatedAction)\n  updateStateByFields({getState, patchState }: StateContext<AppStateModel>, { title, subtitle, description, buttonTitle, midPageDescription }: WebSiteFieldsUpdatedAction) {\n\n    const currentThemeConfig = getState().everyBootstrapThemeConfig;\n\n    const updatedThemeConfig =\n      currentThemeConfig.replace(/^title: \"(.*?)$/gm, `title: \"${title}\"`)\n        .replace(/^top_left_title: \"(.*?)$/gm, `top_left_title: \"${subtitle}\"`)\n        .replace(/^moredetails_section_description: \"(.*?)$/gm, `moredetails_section_description: \"${description}\"`)\n        .replace(/^top_button_page_scroll_title: \"(.*?)$/gm, `top_button_page_scroll_title: \"${buttonTitle}\"`)\n        .replace(/^multicolumn_section_first_column_description: \"(.*?)$/gm, `multicolumn_section_first_column_description: \"${midPageDescription}\"`);\n\n    patchState( { everyBootstrapThemeConfig: updatedThemeConfig } );\n\n  }\n\n  @Action(ThemeChosenAction)\n  themeChosen( { getState, patchState }: StateContext<AppStateModel>, { theme }: ThemeChosenAction) {\n    const currentThemeConfig = getState().everyBootstrapThemeConfig;\n\n    const updatedThemeConfig =\n      currentThemeConfig.replace(/^justsaywebsite_theme: \"(.*?)$/gm, `justsaywebsite_theme: \"${theme}\"`);\n\n    patchState( { everyBootstrapThemeConfig: updatedThemeConfig } );\n  }\n\n\n  @Action(InitWithDefaultsAction)\n  initState( { getState, patchState }: StateContext<AppStateModel>, { }: InitWithDefaultsAction) {\n​\n    if (getState().everyBootstrapThemeConfig == null) {\n      patchState({ everyBootstrapThemeConfig: everyBootstrapThemeConfigDefault });\n    }\n\n    if (getState().everyBootstrapThemeConfig.indexOf('justsaywebsite_theme') == -1) {\n      patchState({ everyBootstrapThemeConfig: everyBootstrapThemeConfigDefault + '\\njustsaywebsite_theme: jekyll-theme-03-every-boostrap'});\n    }\n  }\n\n\n}\n","export class UpdateEmailAction {\n  static readonly type = '[QUICKWEBSITE] UpdateUserAction';\n\n  constructor(public email: string, public username: string, public photoURL: string) {}\n}\n\nexport class WebSiteGeneratedAction {\n  static readonly type = '[QUICKWEBSITE] WebSiteGeneratedAction';\n\n  constructor(public webSiteUrl: string) {}\n}\n\nexport class GenerateWebSiteAction {\n  static readonly type = '[QUICKWEBSITE] GenerateWebSiteAction';\n\n  constructor(public everyBootstrapThemeConfig: string) {}\n}\n\nexport class WebSiteFieldsUpdatedAction {\n  static readonly type = '[QUICKWEBSITE] WebSiteFieldsUpdatedAction';\n\n  constructor(public title: string, public subtitle: string, public description: string,\n              public buttonTitle: string, public midPageDescription: string) {}\n}\n\nexport class ThemeChosenAction {\n  static readonly type = '[QUICKWEBSITE] ThemeChosenAction';\n\n  constructor(public theme: string) {}\n}\n\nexport class InitWithDefaultsAction {\n  static readonly type = '[QUICKWEBSITE] InitWithDefaultsAction';\n\n  constructor() {}\n}\n\nexport class ResetWebSiteFieldsAction {\n  static readonly type = '[QUICKWEBSITE] ResetWebSiteFieldsAction';\n\n  constructor() {}\n}\n","import {ErrorHandler, Injectable, Injector} from '@angular/core';\nimport {Store} from \"@ngxs/store\";\nimport {ResetWebSiteFieldsAction} from \"./actions\";\n\n@Injectable()\nexport class ErrorsHandler implements ErrorHandler {\n\n  constructor(private injector: Injector) {}\n\n  handleError(error: Error) {\n    // Do whatever you like with the error (send it to the server?)\n    // And log it to the console\n    console.error('It happens: ', error);\n    this.injector.get(Store).dispatch([new ResetWebSiteFieldsAction()]);\n  }\n}\n","interface Config {\n  serverURL: string\n}\n\nexport class DevConfig implements Config {\n  serverURL = 'http://localhost:8181'\n}\n\nexport class ProdConfig implements Config {\n  serverURL = 'https://quickwebsite-backend.herokuapp.com'\n}\n\nexport class CurrentConfig extends DevConfig {\n  email: string;\n\n  public constructor() { super(); }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}