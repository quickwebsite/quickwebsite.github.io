{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/inputform/inputform.component.css","webpack:///./src/app/components/inputform/inputform.component.html","webpack:///./src/app/components/inputform/inputform.component.ts","webpack:///./src/app/components/sociallogin/sociallogin.component.css","webpack:///./src/app/components/sociallogin/sociallogin.component.html","webpack:///./src/app/components/sociallogin/sociallogin.component.ts","webpack:///./src/app/config-service.service.ts","webpack:///./src/app/store/State.ts","webpack:///./src/app/store/actions.ts","webpack:///./src/config/config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<header>\\n  <div class=\\\"container\\\">\\n    <div id=\\\"branding\\\">\\n      <h1><span class=\\\"highlight\\\">Just</span> Say Website</h1>\\n    </div>\\n    <nav>\\n      <ul>\\n        <li class=\\\"current\\\"><a href=\\\"index.html\\\">Home</a></li>\\n        <li><a href=\\\"index.html\\\">About</a></li>\\n        <li><a href=\\\"index.html\\\">Services</a></li>\\n      </ul>\\n    </nav>\\n  </div>\\n</header>\\n\\n<section id=\\\"showcase\\\">\\n  <div class=\\\"container\\\">\\n    <h1>Describe a Website - Have It Done</h1>\\n    <p>You just fill the form below with your website title, description, twitter, and you know the other details.  Click the generate button and you have your website done! ;)</p>\\n  </div>\\n</section>\\n\\n<!--<section id=\\\"newsletter\\\">-->\\n  <!--<div class=\\\"container\\\">-->\\n    <!--<h1>Subscribe To Our Newsletter</h1>-->\\n    <!--<form>-->\\n      <!--<input type=\\\"email\\\" placeholder=\\\"Enter Email...\\\">-->\\n      <!--<button type=\\\"submit\\\" class=\\\"button_1\\\">Subscribe</button>-->\\n    <!--</form>-->\\n  <!--</div>-->\\n<!--</section>-->\\n\\n<section id=\\\"boxes\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"box\\\">\\n      <app-inputform></app-inputform>\\n    </div>\\n  </div>\\n</section>\\n\\n<section id=\\\"sociallogin\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"box\\\">\\n      <app-sociallogin></app-sociallogin>\\n    </div>\\n  </div>\\n</section>\\n\\n\\n<!--<section id=\\\"boxes\\\">-->\\n  <!--<div class=\\\"container\\\">-->\\n    <!--<div class=\\\"box\\\">-->\\n      <!--<img src=\\\"assets/img/logo_html.png\\\">-->\\n      <!--<h3>HTML5 Markup</h3>-->\\n      <!--<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mi augue, viverra sit amet ultricies</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"box\\\">-->\\n      <!--<img src=\\\"assets/img/logo_css.png\\\">-->\\n      <!--<h3>CSS3 Styling</h3>-->\\n      <!--<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mi augue, viverra sit amet ultricies</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"box\\\">-->\\n      <!--<img src=\\\"assets/img/logo_brush.png\\\">-->\\n      <!--<h3>Graphic Design</h3>-->\\n      <!--<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mi augue, viverra sit amet ultricies</p>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n<!--</section>-->\\n\\n<footer>\\n  <p>JustSayWebsite Web Deisgn, Copyright &copy; 2017</p>\\n</footer>\\n\\n\\n<!--\\n<div style=\\\"text-align:center\\\">\\n\\n\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\n<h2>Just Say What Your Website Is About Below: </h2>\\n\\n\\n\\n<ul>\\n\\n\\n\\n\\n  <li>\\n    <app-inputform></app-inputform>\\n  </li>\\n\\n  <li>\\n\\n  </li>\\n</ul>\\n\\n-->\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormBuilder, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NgxsModule } from '@ngxs/store';\nimport {MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { InputformComponent } from './components/inputform/inputform.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { SocialLoginModule, AuthServiceConfig } from 'angular-6-social-login';\nimport { GoogleLoginProvider, FacebookLoginProvider } from 'angular-6-social-login';\nimport { SocialLoginComponent } from './components/sociallogin/sociallogin.component';\nimport {ConfigService} from \"./config-service.service\";\n\nimport {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\nimport {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\n\nimport {AppState, AppStateModel} from \"./store/State\";\n\nconst config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider('150697409404-10tptpnagkv9mcogc79nk3c5m8bcenn6.apps.googleusercontent.com')\n  }\n]);\n\nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputformComponent,\n    SocialLoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatToolbarModule,\n    FormsModule,\n    HttpClientModule,\n\n    SocialLoginModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    NgxsModule.forRoot([AppState]),\n    NgxsStoragePluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot({disabled: false}),\n    NgxsLoggerPluginModule.forRoot()\n\n  ],\n  providers: [{\n    provide: AuthServiceConfig,\n    useFactory: provideConfig,\n\n  }, ConfigService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\"","module.exports = \"<!--<form class=\\\"example-form\\\" (ngSubmit)=\\\"onSubmit()\\\">-->\\n<form class=\\\"example-full-width\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <mat-horizontal-stepper>\\n\\n    <mat-step>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Web Site Title\\\" value=\\\"My Landing Page\\\" [(ngModel)]=\\\"model.title\\\" name=\\\"title\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Subtitle\\\" value=\\\"Want to make this subtitle yourself?\\\" [(ngModel)]=\\\"model.subtitle\\\" name=\\\"subtitle\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Web Site Description\\\" value=\\\"The only site description The only site description The only site description The only site description The only site description The only site description The only site description The only site description The only site description The only site description \\\" [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Main Button Title\\\" value=\\\"Top Button Title\\\" [(ngModel)]=\\\"model.topButtonScrollTitle\\\" name=\\\"topButtonScrollTitle\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Mid Page Description\\\" value=\\\"Forget that! Who would ever want to put in all of that effort for a website? Just open up your web browser and type bootstrap template into your favorite search engine, like Yahoo! or Bing, and you're on your way! There are hundreds of templates to choose from, but go ahead and pick this same exact template from the first result on google, edit a few lines, and you're on your way! No one will notice! :)\\\" [(ngModel)]=\\\"model.subdescription\\\" name=\\\"subdescription\\\">\\n      </mat-form-field>\\n\\n      <div>\\n        <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n      </div>\\n    </mat-step>\\n\\n    <mat-step>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Section 3 Title\\\" value=\\\"Section 3 Title\\\" [(ngModel)]=\\\"model.section3Title\\\" name=\\\"section3Title\\\">\\n      </mat-form-field>\\n\\n      <div>\\n        <button mat-button matStepperPrevious type=\\\"button\\\">Back</button>\\n        <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n      </div>\\n\\n    </mat-step>\\n\\n\\n  </mat-horizontal-stepper>\\n\\n    <p>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"openSnackBar('Cool, we are preparing your website', 'It takes about one minute!')\\\">Generate Your Website!</button>\\n    </p>\\n    <div *ngIf=\\\"isInProgress\\\">\\n      <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    </div>\\n    <div *ngIf=\\\"isFinishedUpdatingSite\\\">\\n      <p>\\n        <a href=\\\"{{ (app$ | async).webSiteUrl }}\\\" target=\\\"_blank\\\" >You Said It - Your Web Site Is Here!</a>\\n      </p>\\n    </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfigService} from \"../../config-service.service\";\nimport {AppState} from \"../../store/State\";\nimport {Observable} from \"rxjs/index\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {UpdateEmailAction, WebSiteGeneratedAction} from \"../../store/actions\";\n\ninterface ResponseJson {\n  siteUrl: string;\n}\n\n@Component({\n  selector: 'app-inputform',\n  templateUrl: './inputform.component.html',\n  styleUrls: ['./inputform.component.css']\n})\nexport class InputformComponent implements OnInit {\n\n  isInProgress = false;\n  isFinishedUpdatingSite = false;\n\n  @Select() app$;\n  emailFromStore: string = null;\n\n  model = new WebSiteProperties('Default Web Site Title', 'The only site description The only site description The only site ' +\n    'description The only site description The only site description The only site description The only site description The only ' +\n    'site description The only site description The only site description ', 'Top Button Title', 'Want to make this subtitle yourself?',\n    'Forget that! Who would ever want to put in all of that effort for a website? Just open up your ' +\n    'web browser and type bootstrap template ' +\n    'into your favorite search engine, like Yahoo! or Bing, and you\\'re on your way! There are hundreds of templates to choose from, but ' +\n    'go ahead and pick this same exact template from the first result on google, edit a few lines, ' +\n    'and you\\'re on your way! No one will notice! :)', 'Section 3 Default Title Internal');\n  constructor(private http: HttpClient, public snackBar: MatSnackBar, private formBuilder: FormBuilder,\n              private configService: ConfigService, private store: Store) {\n    this.store.select(state => {\n      this.emailFromStore = state.email;\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log('form submitted...');\n    this.isInProgress = true;\n    console.log('model: ' + JSON.stringify(this.model));\n\n    this.store.selectSnapshot(state => {\n\n      this.http.get<ResponseJson>(`${this.configService.config.serverURL}/?email=${state.app.email}&pageData=${JSON.stringify(this.model)}`).subscribe(data => {\n        console.log(`result: ${JSON.stringify(data)} siteUrl: ${data.siteUrl}`);\n        this.store.dispatch([new WebSiteGeneratedAction(data.siteUrl)]);\n        this.isInProgress = false;\n        this.isFinishedUpdatingSite = true;\n        this.openSnackBar('Your website is ready', 'click above link to open it!');\n      }, error => {\n        console.log(`an error has occured: ${error.message}`);\n        this.isInProgress = false;\n      });\n\n\n    });\n\n\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 10000,\n    });\n  }\n\n}\n\nexport class WebSiteProperties {\n  constructor (public title: string, public description: string,\n               public topButtonScrollTitle: string, public subtitle: string,\n               public subdescription: string, public section3Title: string) {}\n}\n","module.exports = \"/* Social Buttons Style */\\n.btn-si {\\n  background-position: 1em;\\n  background-repeat: no-repeat;\\n  background-size: 2em;\\n  border-radius: 0.5em;\\n  border: none;\\n  color: white;\\n  cursor: pointer;\\n  font-size: 1em;\\n  height: 4em;\\n  line-height: 1em;\\n  padding: 0 2em 0 4em;\\n  text-decoration: none;\\n  transition: all 0.5s; }\\n.btn-google {\\n  background-color: #dd4b39;\\n  background-image: url(\\\"/./assets/img/google.svg\\\"); }\\n.btn-google:hover {\\n  background-color: #e47365; }\\n.btn-google:active {\\n  background-color: #c23321; }\\n.btn-si-a {\\n  padding: 25px 15px 25px 65px !important;\\n  font-family: arial; }\\n.smaller .btn-si-a {\\n  padding-left: 40px !important;\\n  font-size: 12px; }\\n\"","module.exports = \"<div class=\\\"jumbotron bg-transparent text-center\\\">\\n  <div *ngIf=\\\"!(app$ | async).email\\\" class=\\\"card text-center\\\">\\n    <div class=\\\"card-block\\\">\\n      <button class=\\\"btn-si btn-google\\\" (click)=\\\"socialSignIn('google')\\\">Make Site Personal</button>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"(app$ | async).email\\\" class=\\\"card text-center\\\">\\n    <div class=\\\"card-block\\\"></div>\\n    <img class=\\\"card-img-top img-responsive photo\\\" src=\\\"{{ (app$ | async).photoURL }}\\\">\\n    <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">{{ (app$ | async).username }}</h4>\\n      <p class=\\\"card-text\\\">{{ (app$ | async).email }}</p>\\n    </div>\\n    <div class=\\\"card-block\\\">\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"signOut()\\\">Sign out</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService, GoogleLoginProvider, SocialUser} from 'angular-6-social-login';\nimport {ConfigService} from \"../../config-service.service\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {UpdateEmailAction} from \"../../store/actions\";\n\n@Component({\n  selector: 'app-sociallogin',\n  templateUrl: './sociallogin.component.html',\n  styleUrls: ['./sociallogin.component.css']\n})\nexport class SocialLoginComponent {\n\n  user: SocialUser;\n\n  @Select() app$;\n\n  constructor(private socialAuthService: AuthService, private configService: ConfigService,\n              private store: Store) { }\n\n  public socialSignIn(socialPlatform : string) {\n    let socialPlatformProvider;\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n\n    this.socialAuthService.signIn(socialPlatformProvider).then(\n      (userData) => {\n        this.user = userData;\n        console.log(socialPlatform+\" sign in data : \" , userData);\n        this.store.dispatch([new UpdateEmailAction(userData.email, userData.name, userData.image)])\n      }\n    );\n\n  }\n\n  signOut(): void {\n    this.user = null;\n    this.socialAuthService.signOut();\n    this.store.dispatch([new UpdateEmailAction(null, null, null)])\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {CurrentConfig} from \"../config/config\";\n\n@Injectable()\nexport class ConfigService {\n\n  config = new CurrentConfig()\n\n  constructor() {\n\n    console.log(`backend is: ${this.config.serverURL}`);\n\n  }\n\n\n\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport {GenericModel, QuickWebSiteModel, User} from \"./Model\";\nimport {UpdateEmailAction, WebSiteGeneratedAction} from \"./actions\";\n\nexport interface AppStateModel {\n  username: string;\n  email: string;\n  photoURL: string;\n  webSiteUrl: string;\n}\n\n@State<AppStateModel>({\n  name: 'app',\n  defaults: {\n    username: null,\n    email: null,\n    photoURL: null,\n    webSiteUrl: null,\n  }\n})\n\nexport class AppState {\n\n  @Selector()\n  static getUser(state: AppStateModel) {\n    return state.email;\n  }\n\n  @Action(UpdateEmailAction)\n  setEmail({getState, patchState }: StateContext<AppStateModel>, { email, username, photoURL }: UpdateEmailAction) {\n    patchState({ email: email, username: username, photoURL: photoURL });\n  }\n\n  @Action(WebSiteGeneratedAction)\n  setWebSiteUrl({getState, patchState }: StateContext<AppStateModel>, { webSiteUrl }: WebSiteGeneratedAction) {\n    patchState({ webSiteUrl: webSiteUrl });\n  }\n\n}\n","export class UpdateEmailAction {\n  static readonly type = '[QUICKWEBSITE] UpdateUserAction';\n\n  constructor(public email: string, public username: string, public photoURL: string) {}\n}\n\nexport class WebSiteGeneratedAction {\n  static readonly type = '[QUICKWEBSITE] WebSiteGeneratedAction';\n\n  constructor(public webSiteUrl: string) {}\n}\n","interface Config {\n  serverURL: string\n}\n\nexport class DevConfig implements Config {\n  serverURL = 'http://localhost:8181'\n}\n\nexport class ProdConfig implements Config {\n  serverURL = 'https://quickwebsite-backend.herokuapp.com'\n}\n\nexport class CurrentConfig extends ProdConfig {\n  email: string;\n\n  public constructor() { super(); }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}